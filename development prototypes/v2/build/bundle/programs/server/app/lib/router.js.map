{"version":3,"sources":["meteor://ðŸ’»app/lib/router.js"],"names":[],"mappings":"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","file":"/lib/router.js","sourcesContent":["  /******************************************\\\n  |  Routing of the application's templates  |\n  \\******************************************/\n\n//root_url of the current application\nvar root_url = Meteor.settings.public.admin_panel.survey[0].root_url;\n\n/* Route configuration */\nRouter.configure({\n    layoutTemplate: 'MasterLayout',\n    loadingTemplate: 'Loading',\n    notFoundTemplate: 'NotFound'\n}); \n\n/*******************\n * PROFILER SYSTEM *\n *******************/\n\n/* Homepage of the application */\nRouter.route(root_url, {\n    name: 'Index',\n    template: 'Index',\n    controller: 'IndexController'\n});\n\n/* Template to select a picture (between several types of correction) */\nRouter.route(root_url+'/select/:img', {\n    name: 'Select',\n    template: 'Select',\n    controller: 'PictureController'\n});\n\n/* Template to select a picture (between several types of correction) */\nRouter.route(root_url+'/select_ligne/:img', {\n    name: 'Select_ligne',\n    template: 'Select_ligne',\n    controller: 'PictureController'\n});\n\n/* Template to adjust first color correction of a picture */\nRouter.route(root_url+'/adjust/:img', {\n    name: 'Adjust',\n    template: 'Adjust',\n    controller: 'PictureController'\n});\n/* Template to choose best second correction adjustment of a picture */\nRouter.route(root_url+'/choose/:img', {\n    name: 'Choose',\n    template: 'Choose',\n    controller: 'PictureController'\n});\n/* Template to valid a correction (illustration picture) */\nRouter.route(root_url+'/valid/:img', {\n    name: 'Valid',\n    template: 'Valid',\n    controller: 'PictureController'\n});\n/* Template to upload a picture and correct it */\nRouter.route(root_url+'/upload/:img', {\n    name: 'Upload',\n    template: 'Upload',\n    controller: 'PictureController'\n});\n/* Form to submit informations of the current user */\nRouter.route(root_url+'/form', {\n    name: 'Form',\n    template: 'Form',\n    controller: 'FormController'\n});\n/* Form to thank the user */\nRouter.route(root_url+'/thanks/:idUser', {\n    name: 'Thanks',\n    template: 'Thanks',\n    controller: 'ThanksController'\n});\n\n\n/***************\n * Admin panel *\n ***************/\n \n/* Login for Admin Panel */\nRouter.route(root_url+'/admin', {\n    name: 'Login',\n    template: 'Login',\n    controller: 'LoginAdminController'\n});\n\n/* Homepage of Admin Configuration Panel */\nRouter.route(root_url+'/configPanel', {\n    name: 'Config',\n    template: 'Config',\n    controller: 'AdminController'\n});\n\n/* Configuration panel for survey */\nRouter.route(root_url+'/configSurvey', {\n    name: 'ConfigSurvey',\n    template: 'ConfigSurvey',\n    controller: 'AdminController'\n});\n\n/* Configuration panel for modules */\nRouter.route(root_url+'/configModules', {\n    name: 'ConfigModules',\n    template: 'ConfigModules',\n    controller: 'PictureAdminController'\n});\n\n/* Homepage of Admin Mock Panel */\nRouter.route(root_url+'/adminMockPanel', {\n    name: 'AdminMock',\n    template: 'AdminMock',\n    controller: 'AdminMockController'\n});\n\n/* Homepage of Dashboard Panel */\nRouter.route(root_url+'/dashboard', {\n    name: 'Dashboard',\n    template: 'Dashboard',\n    controller: 'DashboardController'\n});\n\n/* Dashboard for each user */\nRouter.route(root_url+'/dashboard/:idUser', {\n    name: 'DashboardUser',\n    template: 'DashboardUser',\n    controller: 'ProfileController'\n});"]}