{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/collection.js"],"names":[],"mappings":"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","file":"/lib/collections/collection.js","sourcesContent":["\n  /***************************************************************************************\\\n  |  collections stored in MongoDB and relations introduced for easy access in templates  |\n  \\***************************************************************************************/\n\n/*******************\n * PROFILER SYSTEM *\n *******************/\n\n/* Users who did the correction test for a particular survey */\nuser = new Mongo.Collection('user', {\n\ttransform: function(doc) {\n\t\t//correcPic can be called from this in templates allowed by publish-suscribe\n\t\tdoc.correcPic = correction_profile_picture.find({\n\t\t\tuser_id: { $in: [doc._id] }\n\t\t});\n\t\t//correcRes can be called from this in templates allowed by publish-suscribe\n\t\tdoc.correcRes = correction_profile_result.find({\n\t\t\tuser_id: { $in: [doc._id] }\n\t\t});\n\t\t//survey that has been realised by this user\n\t\tdoc.survey = survey.find({\n\t\t\t_id: { $in: [doc.survey_id] }\n\t\t});\n\t\treturn doc;\n\t}\n});\n\n/* user's correction profiles for each picture corrected */\ncorrection_profile_picture = new Mongo.Collection('correction_profile_picture', {\n\ttransform: function(doc) {\n\t\t//filter can be called from this in templates allowed by publish-suscribe\n\t\tdoc.filter = filter.find({\n\t\t\tcorrection_profile_picture_id: { $in: [doc._id] }\n\t\t}); \n\t\t//picture can be called from this in templates allowed by publish-suscribe\n\t\tdoc.picture = picture.find({\n\t\t\tcorrection_profile_picture_id: { $in: [doc._id] }\n\t\t}); \n\t\treturn doc;\n\t}\n});\n\n/* user's correction profiles resulting */\ncorrection_profile_result = new Mongo.Collection('correction_profile_result', {\n\ttransform: function(doc) {\n\t\t//filter can be called from this in templates allowed by publish-suscribe\n\t\tdoc.filter = filter.find({\n\t\t\tcorrection_profile_result_id: { $in: [doc._id] }\n\t\t}); \n\t\t//target can be called from this in templates allowed by publish-suscribe\n\t\tdoc.target = target.find({\n\t\t\tcorrection_profile_result_id: { $in: [doc._id] }\n\t\t}); \n\t\treturn doc;\n\t}\n});\n\n/* target of the user's correction result (type of picture, specific tag, class...) */\ntarget = new Mongo.Collection('target');\n\n/* filters of the user's correction profiles (hue, saturation, visionarized_protanope...) */\nfilter = new Mongo.Collection('filter');\n\n/* picture collection include all the picture that the user correct in the current survey */\npicture = new Mongo.Collection('picture');\n\n\n/***************\n * ADMIN PANEL *\n ***************/\n\nsurvey = new Mongo.Collection('survey', {\n\t\n\ttransform: function(doc) {\n\t\t//module_survey can be called from survey\n\t\tdoc.module_survey = module_survey.find({\n\t\t\tsurvey_id: { $in: [doc._id] }\n\t\t}); \n\t\t//picture_admin can be called from survey\n\t\tdoc.picture_admin = picture_admin.find({\n\t\t\tsurvey_id: { $in: [doc._id] }\n\t\t});\n\t\treturn doc;\n\t}\n  \n});\n\nmodule_survey = new Mongo.Collection('module_survey', {\n\t\n\ttransform: function(doc) {\n\t\t//survey parent can be called from picture_admin\n\t\tdoc.surveyObj = survey.findOne ({\n\t\t\t_id: { $in: [doc.survey_id] }\n\t\t}); \n\t\t//info_txt can be called from module_survey\n\t\tdoc.info_txt = info_txt.find({ \n\t\t\tmodule_survey_id: { $in: [doc._id] }\n\t\t}); \n\t\t//sorted_color_admin can be called from module_survey\n\t\tdoc.sorted_color_admin = sorted_color_admin.find({\n\t\t\tmodule_survey_id: { $in: [doc._id] }\n\t\t}); \n\t\t//filter_admin can be called from module_survey\n\t\tdoc.filter_admin = filter_admin.find({\n\t\t\tmodule_survey_id: { $in: [doc._id] }\n\t\t}); \n\t\t//field_form can be called from module_survey\n\t\tdoc.field_form = field_form.find({\n\t\t\tmodule_survey_id: { $in: [doc._id] }\n\t\t}); \n\t\t//instruction can be called from picture_admin\n\t\tdoc.instruction = instruction.find({\n\t\t\tmodule_survey_id: { $in: [doc._id] }\n\t\t}); \n\t\treturn doc;\n\t}\n  \n});\n\npicture_admin = new Mongo.Collection('picture_admin', {\n  \n\ttransform: function(doc) {\n\t\t//survey parent can be called from picture_admin\n\t\tdoc.surveyObj = survey.findOne ({\n\t\t\t_id: { $in: [doc.survey_id] }\n\t\t}); \n\t\t//instruction can be called from picture_admin\n\t\tdoc.instruction = instruction.find({\n\t\t\tpicture_admin_id: { $in: [doc._id] }\n\t\t}); \n\t\treturn doc;\n\t}\n\t\n});\n\ninstruction = new Mongo.Collection('instruction', {\n  \n\ttransform: function(doc) {\n\t\t//picture parent can be called from instruction\n\t\tdoc.picObj = picture_admin.findOne ({\n\t\t\t_id: { $in: [doc.picture_admin_id] }\n\t\t}); \n\t\t//module parent can be called from instruction\n\t\tdoc.moduleObj = module_survey.findOne ({\n\t\t\t_id: { $in: [doc.module_survey_id] }\n\t\t}); \n\t\treturn doc;\n\t}\n\t\n});\n\ninfo_txt = new Mongo.Collection('info_txt', {\n\t\n\ttransform: function(doc) {\n\t\t//module parent can be called from info_txt\n\t\tdoc.module = module_survey.findOne ({\n\t\t\t_id: { $in: [doc.module_survey_id] }\n\t\t}); \n\t\treturn doc;\n\t}\n\t\n});\n\nsorted_color_admin = new Mongo.Collection('sorted_color_admin', {\n\t\n\ttransform: function(doc) {\n\t\t//module parent can be called from sorted_color_admin\n\t\tdoc.module = module_survey.findOne ({\n\t\t\t_id: { $in: [doc.module_survey_id] }\n\t\t}); \n\t\treturn doc;\n\t}\n\t\n});\n\nfilter_admin = new Mongo.Collection('filter_admin', {\n\t\n\ttransform: function(doc) {\n\t\t//module parent can be called from filter_admin\n\t\tdoc.module = module_survey.findOne ({\n\t\t\t_id: { $in: [doc.module_survey_id] }\n\t\t});\n\t\treturn doc;\n\t}\n\t\n});\n\nfield_form = new Mongo.Collection('field_form', {\n\t\n\ttransform: function(doc) {\n\t\t//module parent can be called from filter_admin\n\t\tdoc.module = module_survey.findOne ({\n\t\t\t_id: { $in: [doc.module_survey_id] }\n\t\t}); \n\t\treturn doc;\n\t}\n\t\n});\n\n\n/********************\n * Picture uploaded *\n ********************/\n \nvar pictureStore = new FS.Store.GridFS(\"picture_upload\");\n\npicture_upload = new FS.Collection(\"picture_upload\", {\n  stores: [pictureStore],\n  filter: {\n    allow: {\n      contentTypes: ['image/*'] //allow only images in this FS.Collection\n    }\n  }\n});\n\npicture_upload.deny({\n  insert: function(){\n    return false;\n  },\n  update: function(){\n    return false;\n  },\n  remove: function(){\n    return false;\n  },\n  download: function(){\n    return false;\n  }\n  });\n\npicture_upload.allow({\n  insert: function(){\n    return true;\n  },\n  update: function(){\n    return true;\n  },\n  remove: function(){\n    return true;\n  },\n  download: function(){\n    return true;\n  }\n});"]}