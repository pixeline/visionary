{"version":3,"sources":["meteor://ðŸ’»app/packages/universe_carousel/packages/universe_carousel.js"],"names":[],"mappingsfile":"/packages/universe_carousel.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/index.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.config({                                                                                                        // 1\n    packages: {                                                                                                        // 2\n        '{universe:carousel}': {                                                                                       // 3\n            main: 'index',                                                                                             // 4\n            format: 'register',                                                                                        // 5\n            map: {                                                                                                     // 6\n                '.': System.normalizeSync('{universe:carousel}')                                                       // 7\n            }                                                                                                          // 8\n        }                                                                                                              // 9\n    }                                                                                                                  // 10\n});                                                                                                                    // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/index.import.js.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/index', ['./components/slider'], function (_export) {\n  return {\n    setters: [function (_componentsSlider) {\n      for (var _key in _componentsSlider) {\n        _export(_key, _componentsSlider[_key]);\n      }\n    }],\n    execute: function () {}\n  };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/classnames.import.jsx.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/classnames', [], function (_export) {\n    _export('default', classNames);\n\n    function classNames() {\n\n        var classes = '';\n\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            if (!arg) continue;\n\n            var argType = typeof arg;\n\n            if ('string' === argType || 'number' === argType) {\n                classes += ' ' + arg;\n            } else if (Array.isArray(arg)) {\n                classes += ' ' + classNames.apply(null, arg);\n            } else if ('object' === argType) {\n                for (var key in arg) {\n                    if (arg.hasOwnProperty(key) && arg[key]) {\n                        classes += ' ' + key;\n                    }\n                }\n            }\n        }\n\n        return classes.substr(1);\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            ;\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/enquire.import.jsx.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/enquire', [], function (_export) {\n    var enquire, matchMedia;\n\n    /*jshint unused:false */\n    /**\n     * Helper function for iterating over a collection\n     *\n     * @param collection\n     * @param fn\n     */\n    function each(collection, fn) {\n        var i = 0,\n            length = collection.length,\n            cont;\n\n        for (i; i < length; i++) {\n            cont = fn(collection[i], i);\n            if (cont === false) {\n                break; //allow early exit\n            }\n        }\n    }\n\n    /**\n     * Helper function for determining whether target object is an array\n     *\n     * @param target the object under test\n     * @return {Boolean} true if array, false otherwise\n     */\n    function isArray(target) {\n        return Object.prototype.toString.apply(target) === '[object Array]';\n    }\n\n    /**\n     * Helper function for determining whether target object is a function\n     *\n     * @param target the object under test\n     * @return {Boolean} true if function, false otherwise\n     */\n    function isFunction(target) {\n        return typeof target === 'function';\n    }\n\n    /**\n     * Delegate to handle a media query being matched and unmatched.\n     *\n     * @param {object} options\n     * @param {function} options.match callback for when the media query is matched\n     * @param {function} [options.unmatch] callback for when the media query is unmatched\n     * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n     * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n     * @constructor\n     */\n    function QueryHandler(options) {\n        this.options = options;\n        !options.deferSetup && this.setup();\n    }\n\n    /**\n     * Represents a single media query, manages it's state and registered handlers for this query\n     *\n     * @constructor\n     * @param {string} query the media query string\n     * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n     */\n    function MediaQuery(query, isUnconditional) {\n        this.query = query;\n        this.isUnconditional = isUnconditional;\n        this.handlers = [];\n        this.mql = matchMedia(query);\n\n        var self = this;\n        this.listener = function (mql) {\n            self.mql = mql;\n            self.assess();\n        };\n        this.mql.addListener(this.listener);\n    }\n\n    /**\n     * Allows for registration of query handlers.\n     * Manages the query handler's state and is responsible for wiring up browser events\n     *\n     * @constructor\n     */\n    function MediaQueryDispatch() {\n        if (!matchMedia) {\n            throw new Error('matchMedia not present, legacy browsers require a polyfill');\n        }\n\n        this.queries = {};\n        this.browserIsIncapable = !matchMedia('only all').matches;\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            if (Meteor.isClient) {\n\n                /*!\n                 * enquire.js v2.1.2 - Awesome Media Queries in JavaScript\n                 * Copyright (c) 2014 Nick Williams - http://wicky.nillia.ms/enquire.js\n                 * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n                 */\n                matchMedia = typeof window !== 'undefined' && window.matchMedia;\n                QueryHandler.prototype = {\n\n                    /**\n                     * coordinates setup of the handler\n                     *\n                     * @function\n                     */\n                    setup: function () {\n                        if (this.options.setup) {\n                            this.options.setup();\n                        }\n                        this.initialised = true;\n                    },\n\n                    /**\n                     * coordinates setup and triggering of the handler\n                     *\n                     * @function\n                     */\n                    on: function () {\n                        !this.initialised && this.setup();\n                        this.options.match && this.options.match();\n                    },\n\n                    /**\n                     * coordinates the unmatch event for the handler\n                     *\n                     * @function\n                     */\n                    off: function () {\n                        this.options.unmatch && this.options.unmatch();\n                    },\n\n                    /**\n                     * called when a handler is to be destroyed.\n                     * delegates to the destroy or unmatch callbacks, depending on availability.\n                     *\n                     * @function\n                     */\n                    destroy: function () {\n                        this.options.destroy ? this.options.destroy() : this.off();\n                    },\n\n                    /**\n                     * determines equality by reference.\n                     * if object is supplied compare options, if function, compare match callback\n                     *\n                     * @function\n                     * @param {object || function} [target] the target for comparison\n                     */\n                    equals: function (target) {\n                        return this.options === target || this.options.match === target;\n                    }\n\n                };MediaQuery.prototype = {\n\n                    /**\n                     * add a handler for this query, triggering if already active\n                     *\n                     * @param {object} handler\n                     * @param {function} handler.match callback for when query is activated\n                     * @param {function} [handler.unmatch] callback for when query is deactivated\n                     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n                     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n                     */\n                    addHandler: function (handler) {\n                        var qh = new QueryHandler(handler);\n                        this.handlers.push(qh);\n\n                        this.matches() && qh.on();\n                    },\n\n                    /**\n                     * removes the given handler from the collection, and calls it's destroy methods\n                     *\n                     * @param {object || function} handler the handler to remove\n                     */\n                    removeHandler: function (handler) {\n                        var handlers = this.handlers;\n                        each(handlers, function (h, i) {\n                            if (h.equals(handler)) {\n                                h.destroy();\n                                return !handlers.splice(i, 1); //remove from array and exit each early\n                            }\n                        });\n                    },\n\n                    /**\n                     * Determine whether the media query should be considered a match\n                     *\n                     * @return {Boolean} true if media query can be considered a match, false otherwise\n                     */\n                    matches: function () {\n                        return this.mql.matches || this.isUnconditional;\n                    },\n\n                    /**\n                     * Clears all handlers and unbinds events\n                     */\n                    clear: function () {\n                        each(this.handlers, function (handler) {\n                            handler.destroy();\n                        });\n                        this.mql.removeListener(this.listener);\n                        this.handlers.length = 0; //clear array\n                    },\n\n                    /*\n                     * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n                     */\n                    assess: function () {\n                        var action = this.matches() ? 'on' : 'off';\n\n                        each(this.handlers, function (handler) {\n                            handler[action]();\n                        });\n                    }\n                };MediaQueryDispatch.prototype = {\n\n                    /**\n                     * Registers a handler for the given media query\n                     *\n                     * @param {string} q the media query\n                     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n                     * @param {function} options.match fired when query matched\n                     * @param {function} [options.unmatch] fired when a query is no longer matched\n                     * @param {function} [options.setup] fired when handler first triggered\n                     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n                     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n                     */\n                    register: function (q, options, shouldDegrade) {\n                        var queries = this.queries,\n                            isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n                        if (!queries[q]) {\n                            queries[q] = new MediaQuery(q, isUnconditional);\n                        }\n\n                        //normalise to object in an array\n                        if (isFunction(options)) {\n                            options = { match: options };\n                        }\n                        if (!isArray(options)) {\n                            options = [options];\n                        }\n                        each(options, function (handler) {\n                            if (isFunction(handler)) {\n                                handler = { match: handler };\n                            }\n                            queries[q].addHandler(handler);\n                        });\n\n                        return this;\n                    },\n\n                    /**\n                     * unregisters a query and all it's handlers, or a specific handler for a query\n                     *\n                     * @param {string} q the media query to target\n                     * @param {object || function} [handler] specific handler to unregister\n                     */\n                    unregister: function (q, handler) {\n                        var query = this.queries[q];\n\n                        if (query) {\n                            if (handler) {\n                                query.removeHandler(handler);\n                            } else {\n                                query.clear();\n                                delete this.queries[q];\n                            }\n                        }\n\n                        return this;\n                    }\n                };\n                enquire = new MediaQueryDispatch();\n            }\n\n            _export('default', enquire);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/execution-environment.import.jsx.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/execution-environment', [], function (_export) {\n    var canUseDOM;\n    return {\n        setters: [],\n        execute: function () {\n            canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n            _export('default', {\n\n                canUseDOM: canUseDOM,\n\n                canUseWorkers: typeof Worker !== 'undefined',\n\n                canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n                canUseViewport: canUseDOM && !!window.screen\n\n            });\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/json2mq.import.jsx.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/json2mq', ['./string-convert'], function (_export) {\n    var stringConvert, camel2hyphen, isDimension, obj2mq;\n    return {\n        setters: [function (_stringConvert) {\n            stringConvert = _stringConvert['default'];\n        }],\n        execute: function () {\n            camel2hyphen = stringConvert.camel2hyphen;\n\n            isDimension = function (feature) {\n                var re = /[height|width]$/;\n                return re.test(feature);\n            };\n\n            obj2mq = function (obj) {\n                var mq = '';\n                var features = Object.keys(obj);\n                features.forEach(function (feature, index) {\n                    var value = obj[feature];\n                    feature = camel2hyphen(feature);\n                    // Add px to dimension features\n                    if (isDimension(feature) && typeof value === 'number') {\n                        value = value + 'px';\n                    }\n                    if (value === true) {\n                        mq += feature;\n                    } else if (value === false) {\n                        mq += 'not ' + feature;\n                    } else {\n                        mq += '(' + feature + ': ' + value + ')';\n                    }\n                    if (index < features.length - 1) {\n                        mq += ' and ';\n                    }\n                });\n                return mq;\n            };\n\n            _export('default', function (query) {\n                var mq = '';\n                if (typeof query === 'string') {\n                    return query;\n                }\n                // Handling array of media queries\n                if (query instanceof Array) {\n                    query.forEach(function (q, index) {\n                        mq += obj2mq(q);\n                        if (index < query.length - 1) {\n                            mq += ', ';\n                        }\n                    });\n                    return mq;\n                }\n                // Handling single media query\n                return obj2mq(query);\n            });\n\n            ;\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/object-assign.import.jsx.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/object-assign', [], function (_export) {\n    var hasOwnProperty, propIsEnumerable;\n\n    function toObject(val) {\n        if (val === null || val === undefined) {\n            throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n\n        return Object(val);\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            hasOwnProperty = Object.prototype.hasOwnProperty;\n            propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n            _export('default', Object.assign || function (target, source) {\n                var from;\n                var to = toObject(target);\n                var symbols;\n\n                for (var s = 1; s < arguments.length; s++) {\n                    from = Object(arguments[s]);\n\n                    for (var key in from) {\n                        if (hasOwnProperty.call(from, key)) {\n                            to[key] = from[key];\n                        }\n                    }\n\n                    if (Object.getOwnPropertySymbols) {\n                        symbols = Object.getOwnPropertySymbols(from);\n                        for (var i = 0; i < symbols.length; i++) {\n                            if (propIsEnumerable.call(from, symbols[i])) {\n                                to[symbols[i]] = from[symbols[i]];\n                            }\n                        }\n                    }\n                }\n\n                return to;\n            });\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/react-clonewithprops.import.jsx.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/react-clonewithprops', [], function (_export) {\n    var hasOwn, version, RESERVED;\n\n    _export('default', cloneWithProps);\n\n    function cloneWithProps(child, props) {\n        var newProps = mergeProps(props, child.props);\n\n        if (!hasOwn.call(newProps, 'children') && hasOwn.call(child.props, 'children')) newProps.children = child.props.children;\n\n        // < 0.11\n        if (version[0] === 0 && version[1] < 11) return child.constructor.ConvenienceConstructor(newProps);\n\n        // 0.11\n        if (version[0] === 0 && version[1] === 11) return child.constructor(newProps);\n\n        // 0.12\n        else if (version[0] === 0 && version[1] === 12) {\n                MockLegacyFactory.isReactLegacyFactory = true;\n                MockLegacyFactory.type = child.type;\n                return React.createElement(MockLegacyFactory, newProps);\n            }\n\n        // 0.13+\n        return React.createElement(child.type, newProps);\n\n        function MockLegacyFactory() {}\n    }\n\n    function mergeProps(currentProps, childProps) {\n        var newProps = extend(currentProps),\n            key;\n\n        for (key in childProps) {\n            if (hasOwn.call(RESERVED, key)) RESERVED[key](newProps, childProps[key], key);else if (!hasOwn.call(newProps, key)) newProps[key] = childProps[key];\n        }\n        return newProps;\n    }\n\n    function resolve(fn) {\n        return function (src, value, key) {\n            if (!hasOwn.call(src, key)) src[key] = value;else src[key] = fn(src[key], value);\n        };\n    }\n\n    function joinClasses(a, b) {\n        if (!a) return b || '';\n        return a + (b ? ' ' + b : '');\n    }\n\n    function extend() {\n        var target = {};\n        for (var i = 0; i < arguments.length; i++) for (var key in arguments[i]) if (hasOwn.call(arguments[i], key)) target[key] = arguments[i][key];\n        return target;\n    }\n    return {\n        setters: [],\n        execute: function () {\n            hasOwn = Object.prototype.hasOwnProperty;\n            version = React.version.split('.').map(parseFloat);\n            RESERVED = {\n                className: resolve(joinClasses),\n                children: function () {},\n                key: function () {},\n                ref: function () {},\n                style: resolve(extend)\n            };\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/react-transition-events.import.jsx.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/react-transition-events', ['./execution-environment'], function (_export) {\n    var ExecutionEnvironment, EVENT_NAME_MAP, endEvents, ReactTransitionEvents;\n\n    function detectEvents() {\n        var testEl = document.createElement('div');\n        var style = testEl.style;\n\n        // On some platforms, in particular some releases of Android 4.x,\n        // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n        // style object but the events that fire will still be prefixed, so we need\n        // to check if the un-prefixed events are useable, and if not remove them\n        // from the map\n        if (!('AnimationEvent' in window)) {\n            delete EVENT_NAME_MAP.animationend.animation;\n        }\n\n        if (!('TransitionEvent' in window)) {\n            delete EVENT_NAME_MAP.transitionend.transition;\n        }\n\n        for (var baseEventName in EVENT_NAME_MAP) {\n            var baseEvents = EVENT_NAME_MAP[baseEventName];\n            for (var styleName in baseEvents) {\n                if (styleName in style) {\n                    endEvents.push(baseEvents[styleName]);\n                    break;\n                }\n            }\n        }\n    }\n\n    // We use the raw {add|remove}EventListener() call because EventListener\n    // does not know how to remove event listeners and we really should\n    // clean up. Also, these events are not triggered in older browsers\n    // so we should be A-OK here.\n\n    function addEventListener(node, eventName, eventListener) {\n        node.addEventListener(eventName, eventListener, false);\n    }\n\n    function removeEventListener(node, eventName, eventListener) {\n        node.removeEventListener(eventName, eventListener, false);\n    }\n\n    return {\n        setters: [function (_executionEnvironment) {\n            ExecutionEnvironment = _executionEnvironment['default'];\n        }],\n        execute: function () {\n            /**\n             * Copyright 2013-2015, Facebook, Inc.\n             * All rights reserved.\n             *\n             * This source code is licensed under the BSD-style license found in the\n             * LICENSE file in the root directory of this source tree. An additional grant\n             * of patent rights can be found in the PATENTS file in the same directory.\n             *\n             * @providesModule ReactTransitionEvents\n             */\n\n            /**\n             * EVENT_NAME_MAP is used to determine which event fired when a\n             * transition/animation ends, based on the style property used to\n             * define that event.\n             */\n            EVENT_NAME_MAP = {\n                transitionend: {\n                    'transition': 'transitionend',\n                    'WebkitTransition': 'webkitTransitionEnd',\n                    'MozTransition': 'mozTransitionEnd',\n                    'OTransition': 'oTransitionEnd',\n                    'msTransition': 'MSTransitionEnd'\n                },\n\n                animationend: {\n                    'animation': 'animationend',\n                    'WebkitAnimation': 'webkitAnimationEnd',\n                    'MozAnimation': 'mozAnimationEnd',\n                    'OAnimation': 'oAnimationEnd',\n                    'msAnimation': 'MSAnimationEnd'\n                }\n            };\n            endEvents = [];\n            if (ExecutionEnvironment.canUseDOM) {\n                detectEvents();\n            }ReactTransitionEvents = {\n                addEndEventListener: function (node, eventListener) {\n                    if (endEvents.length === 0) {\n                        // If CSS transitions are not supported, trigger an \"end animation\"\n                        // event immediately.\n                        window.setTimeout(eventListener, 0);\n                        return;\n                    }\n                    endEvents.forEach(function (endEvent) {\n                        addEventListener(node, endEvent, eventListener);\n                    });\n                },\n\n                removeEndEventListener: function (node, eventListener) {\n                    if (endEvents.length === 0) {\n                        return;\n                    }\n                    endEvents.forEach(function (endEvent) {\n                        removeEventListener(node, endEvent, eventListener);\n                    });\n                }\n            };\n\n            _export('default', ReactTransitionEvents);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/lib/string-convert.import.jsx.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/lib/string-convert', [], function (_export) {\n    return {\n        setters: [],\n        execute: function () {\n            _export('default', {\n                hyphen2camel: function (str) {\n                    return str.toLowerCase().replace(/-[a-z]/g, function (match) {\n                        return match.slice(1).toUpperCase();\n                    });\n                }, camel2hyphen: function (str) {\n                    return str.replace(/[A-Z]/g, function (match) {\n                        return '-' + match.toLowerCase();\n                    }).toLowerCase();\n                } });\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/arrows.import.jsx.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/arrows', ['../lib/classnames'], function (_export) {\n    var classnames, PrevArrow, NextArrow;\n    return {\n        setters: [function (_libClassnames) {\n            classnames = _libClassnames['default'];\n        }],\n        execute: function () {\n            PrevArrow = React.createClass({\n\n                clickHandler: function (options, e) {\n                    e.preventDefault();\n                    this.props.clickHandler(options, e);\n                },\n                render: function () {\n                    var prevClasses = { 'slick-prev': true, ui: true, icon: true, chevron: true, left: true };\n                    var prevHandler = this.clickHandler.bind(this, { message: 'previous' });\n\n                    if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {\n                        prevClasses['slick-disabled'] = true;\n                        prevHandler = null;\n                    }\n\n                    var prevArrowProps = {\n                        key: '0',\n                        ref: 'previous',\n                        'data-role': 'none',\n                        className: classnames(prevClasses),\n                        style: { display: 'block' },\n                        onClick: prevHandler\n                    };\n                    var prevArrow;\n\n                    if (this.props.prevArrow) {\n                        prevArrow = React.createElement(this.props.prevArrow, prevArrowProps);\n                    } else {\n                        prevArrow = React.createElement('i', babelHelpers._extends({ key: '0' }, prevArrowProps));\n                    }\n\n                    return prevArrow;\n                }\n            });\n\n            _export('PrevArrow', PrevArrow);\n\n            NextArrow = React.createClass({\n                clickHandler: function (options, e) {\n                    e.preventDefault();\n                    this.props.clickHandler(options, e);\n                },\n                render: function () {\n                    var nextClasses = { 'slick-next': true, ui: true, icon: true, chevron: true, right: true };\n                    var nextHandler = this.clickHandler.bind(this, { message: 'next' });\n\n                    if (!this.props.infinite) {\n                        if (this.props.centerMode && this.props.currentSlide >= this.props.slideCount - 1) {\n                            nextClasses['slick-disabled'] = true;\n                            nextHandler = null;\n                        } else {\n                            if (this.props.currentSlide >= this.props.slideCount - this.props.slidesToShow) {\n                                nextClasses['slick-disabled'] = true;\n                                nextHandler = null;\n                            }\n                        }\n\n                        if (this.props.slideCount <= this.props.slidesToShow) {\n                            nextClasses['slick-disabled'] = true;\n                            nextHandler = null;\n                        }\n                    }\n\n                    var nextArrowProps = {\n                        key: '1',\n                        ref: 'next',\n                        'data-role': 'none',\n                        className: classnames(nextClasses),\n                        style: { display: 'block' },\n                        onClick: nextHandler\n                    };\n\n                    var nextArrow;\n\n                    if (this.props.nextArrow) {\n                        nextArrow = React.createElement(this.props.nextArrow, nextArrowProps);\n                    } else {\n                        nextArrow = React.createElement('i', babelHelpers._extends({ key: '1' }, nextArrowProps));\n                    }\n\n                    return nextArrow;\n                }\n            });\n\n            _export('NextArrow', NextArrow);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/default-props.import.jsx.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/default-props', [], function (_export) {\n    return {\n        setters: [],\n        execute: function () {\n            _export('default', {\n                className: '',\n                // accessibility: true,\n                adaptiveHeight: false,\n                arrows: true,\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: false,\n                responsive: null,\n                rtl: false,\n                slide: 'div',\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                variableWidth: false,\n                vertical: false,\n                // waitForAnimate: true,\n                afterChange: null,\n                beforeChange: null,\n                edgeEvent: null,\n                init: null,\n                swipeEvent: null,\n                // nextArrow, prevArrow are react componets\n                nextArrow: null,\n                prevArrow: null\n            });\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/dots.import.jsx.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/dots', ['../lib/classnames'], function (_export) {\n    var classnames, getDotCount, Dots;\n    return {\n        setters: [function (_libClassnames) {\n            classnames = _libClassnames['default'];\n        }],\n        execute: function () {\n            getDotCount = function (spec) {\n                var dots;\n                dots = Math.ceil(spec.slideCount / spec.slidesToScroll);\n                return dots;\n            };\n\n            Dots = React.createClass({\n\n                clickHandler: function (options, e) {\n                    // In Autoplay the focus stays on clicked button even after transition\n                    // to next slide. That only goes away by click somewhere outside\n                    e.preventDefault();\n                    this.props.clickHandler(options);\n                },\n                render: function () {\n                    var _this = this;\n\n                    var dotCount = getDotCount({\n                        slideCount: this.props.slideCount,\n                        slidesToScroll: this.props.slidesToScroll\n                    });\n\n                    var dots = Array.apply(null, { length: dotCount }).map(function (x, i) {\n\n                        var className = classnames({\n                            'slick-active': _this.props.currentSlide === i * _this.props.slidesToScroll\n                        });\n\n                        var dotOptions = {\n                            message: 'dots',\n                            index: i,\n                            slidesToScroll: _this.props.slidesToScroll,\n                            currentSlide: _this.props.currentSlide\n                        };\n\n                        return React.createElement(\n                            'li',\n                            { key: i, className: className },\n                            React.createElement(\n                                'button',\n                                { onClick: _this.clickHandler.bind(_this, dotOptions) },\n                                i\n                            )\n                        );\n                    });\n\n                    return React.createElement(\n                        'ul',\n                        { className: this.props.dotsClass, style: { display: 'block' } },\n                        dots\n                    );\n                }\n            });\n\n            _export('Dots', Dots);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/initial-state.import.jsx.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register(\"{universe:carousel}/components/initial-state\", [], function (_export) {\n    return {\n        setters: [],\n        execute: function () {\n            _export(\"default\", {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                // listWidth: null,\n                // listHeight: null,\n                // loadIndex: 0,\n                slideCount: null,\n                slideWidth: null,\n                // sliding: false,\n                // slideOffset: 0,\n                swipeLeft: null,\n                touchObject: {\n                    startX: 0,\n                    startY: 0,\n                    curX: 0,\n                    curY: 0\n                },\n\n                lazyLoadedList: [],\n\n                // added for react\n                initialized: false,\n                edgeDragged: false,\n                swiped: false, // used by swipeEvent. differentites between touch and swipe.\n                trackStyle: {},\n                trackWidth: 0\n\n                // Removed\n                // transformsEnabled: false,\n                // $nextArrow: null,\n                // $prevArrow: null,\n                // $dots: null,\n                // $list: null,\n                // $slideTrack: null,\n                // $slides: null,\n            });\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/inner-slider.import.jsx.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/inner-slider', ['../mixins/event-handlers', '../mixins/helpers', './initial-state', './default-props', '../lib/classnames', './track', './dots', './arrows'], function (_export) {\n    var EventHandlersMixin, HelpersMixin, initialState, defaultProps, classnames, Track, Dots, PrevArrow, NextArrow, InnerSlider;\n    return {\n        setters: [function (_mixinsEventHandlers) {\n            EventHandlersMixin = _mixinsEventHandlers['default'];\n        }, function (_mixinsHelpers) {\n            HelpersMixin = _mixinsHelpers['default'];\n        }, function (_initialState) {\n            initialState = _initialState['default'];\n        }, function (_defaultProps) {\n            defaultProps = _defaultProps['default'];\n        }, function (_libClassnames) {\n            classnames = _libClassnames['default'];\n        }, function (_track) {\n            Track = _track.Track;\n        }, function (_dots) {\n            Dots = _dots.Dots;\n        }, function (_arrows) {\n            PrevArrow = _arrows.PrevArrow;\n            NextArrow = _arrows.NextArrow;\n        }],\n        execute: function () {\n            InnerSlider = React.createClass({\n                mixins: [HelpersMixin, EventHandlersMixin],\n                getInitialState: function () {\n                    return initialState;\n                },\n                getDefaultProps: function () {\n                    return defaultProps;\n                },\n                componentWillMount: function () {\n                    if (this.props.init) {\n                        this.props.init();\n                    }\n                    this.setState({\n                        mounted: true\n                    });\n                    var lazyLoadedList = [];\n                    for (var i = 0; i < this.props.children.length; i++) {\n                        if (i >= this.state.currentSlide && i < this.state.currentSlide + this.props.slidesToShow) {\n                            lazyLoadedList.push(i);\n                        }\n                    }\n\n                    if (this.props.lazyLoad && this.state.lazyLoadedList.length === 0) {\n                        this.setState({\n                            lazyLoadedList: lazyLoadedList\n                        });\n                    }\n                },\n                componentDidMount: function () {\n                    // Hack for autoplay -- Inspect Later\n                    this.initialize(this.props);\n                    this.adaptHeight();\n                    window.addEventListener('resize', this.onWindowResized);\n                },\n                componentWillUnmount: function () {\n                    window.removeEventListener('resize', this.onWindowResized);\n                    if (this.state.autoPlayTimer) {\n                        window.clearTimeout(this.state.autoPlayTimer);\n                    }\n                },\n                componentWillReceiveProps: function (nextProps) {\n                    this.update(nextProps);\n                },\n                componentDidUpdate: function () {\n                    this.adaptHeight();\n                },\n                onWindowResized: function () {\n                    this.initialize(this.props);\n                },\n                render: function () {\n                    var className = classnames('slick-initialized', 'slick-slider', this.props.className);\n\n                    var trackProps = {\n                        fade: this.props.fade,\n                        cssEase: this.props.cssEase,\n                        speed: this.props.speed,\n                        infinite: this.props.infinite,\n                        centerMode: this.props.centerMode,\n                        currentSlide: this.state.currentSlide,\n                        lazyLoad: this.props.lazyLoad,\n                        lazyLoadedList: this.state.lazyLoadedList,\n                        rtl: this.props.rtl,\n                        slideWidth: this.state.slideWidth,\n                        slidesToShow: this.props.slidesToShow,\n                        slideCount: this.state.slideCount,\n                        trackStyle: this.state.trackStyle,\n                        variableWidth: this.props.variableWidth\n                    };\n\n                    var dots;\n\n                    if (this.props.dots === true && this.state.slideCount > this.props.slidesToShow) {\n                        var dotProps = {\n                            dotsClass: this.props.dotsClass,\n                            slideCount: this.state.slideCount,\n                            slidesToShow: this.props.slidesToShow,\n                            currentSlide: this.state.currentSlide,\n                            slidesToScroll: this.props.slidesToScroll,\n                            clickHandler: this.changeSlide\n                        };\n\n                        dots = React.createElement(Dots, dotProps);\n                    }\n\n                    var prevArrow, nextArrow;\n\n                    var arrowProps = {\n                        infinite: this.props.infinite,\n                        centerMode: this.props.centerMode,\n                        currentSlide: this.state.currentSlide,\n                        slideCount: this.state.slideCount,\n                        slidesToShow: this.props.slidesToShow,\n                        prevArrow: this.props.prevArrow,\n                        nextArrow: this.props.nextArrow,\n                        clickHandler: this.changeSlide\n                    };\n\n                    if (this.props.arrows) {\n                        prevArrow = React.createElement(PrevArrow, arrowProps);\n                        nextArrow = React.createElement(NextArrow, arrowProps);\n                    }\n\n                    return React.createElement(\n                        'div',\n                        { className: className },\n                        React.createElement(\n                            'div',\n                            {\n                                ref: 'list',\n                                className: \"slick-list\",\n                                onMouseDown: this.swipeStart,\n                                onMouseMove: this.state.dragging ? this.swipeMove : null,\n                                onMouseUp: this.swipeEnd,\n                                onMouseLeave: this.state.dragging ? this.swipeEnd : null,\n                                onTouchStart: this.swipeStart,\n                                onTouchMove: this.state.dragging ? this.swipeMove : null,\n                                onTouchEnd: this.swipeEnd,\n                                onTouchCancel: this.state.dragging ? this.swipeEnd : null },\n                            React.createElement(\n                                Track,\n                                babelHelpers._extends({ ref: 'track' }, trackProps),\n                                this.props.children\n                            )\n                        ),\n                        prevArrow,\n                        nextArrow,\n                        dots\n                    );\n                }\n            });\n\n            _export('InnerSlider', InnerSlider);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/slider.import.jsx.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/slider', ['./inner-slider', '../lib/object-assign', '../lib/json2mq', '../mixins/react-responsive', './default-props'], function (_export) {\n    var InnerSlider, assign, json2mq, ResponsiveMixin, defaultProps;\n    return {\n        setters: [function (_innerSlider) {\n            InnerSlider = _innerSlider.InnerSlider;\n        }, function (_libObjectAssign) {\n            assign = _libObjectAssign['default'];\n        }, function (_libJson2mq) {\n            json2mq = _libJson2mq['default'];\n        }, function (_mixinsReactResponsive) {\n            ResponsiveMixin = _mixinsReactResponsive['default'];\n        }, function (_defaultProps) {\n            defaultProps = _defaultProps['default'];\n        }],\n        execute: function () {\n            _export('default', React.createClass({\n                displayName: 'Slider',\n                mixins: [ResponsiveMixin],\n                getInitialState: function () {\n                    return {\n                        breakpoint: null\n                    };\n                },\n                componentDidMount: function () {\n                    var _this = this;\n\n                    if (this.props.responsive) {\n                        var breakpoints = this.props.responsive.map(function (breakpt) {\n                            return breakpt.breakpoint;\n                        });\n                        breakpoints.sort(function (x, y) {\n                            return x - y;\n                        });\n\n                        breakpoints.forEach(function (breakpoint, index) {\n                            var bQuery;\n                            if (index === 0) {\n                                bQuery = json2mq({ minWidth: 0, maxWidth: breakpoint });\n                            } else {\n                                bQuery = json2mq({ minWidth: breakpoints[index - 1], maxWidth: breakpoint });\n                            }\n                            _this.media(bQuery, function () {\n                                _this.setState({ breakpoint: breakpoint });\n                            });\n                        });\n\n                        // Register media query for full screen. Need to support resize from small to large\n                        var query = json2mq({ minWidth: breakpoints.slice(-1)[0] });\n\n                        this.media(query, function () {\n                            _this.setState({ breakpoint: null });\n                        });\n                    }\n                },\n                render: function () {\n                    var _this2 = this;\n\n                    var settings;\n                    var newProps;\n                    if (this.state.breakpoint) {\n                        newProps = this.props.responsive.filter(function (resp) {\n                            return resp.breakpoint === _this2.state.breakpoint;\n                        });\n                        settings = newProps[0].settings === 'unslick' ? 'unslick' : assign({}, this.props, newProps[0].settings);\n                    } else {\n                        settings = assign({}, defaultProps, this.props);\n                    }\n                    if (settings === 'unslick') {\n                        // if 'unslick' responsive breakpoint setting used, just return the <Slider> tag nested HTML\n                        return React.createElement(\n                            'div',\n                            null,\n                            this.props.children\n                        );\n                    } else {\n                        return React.createElement(\n                            InnerSlider,\n                            settings,\n                            this.props.children\n                        );\n                    }\n                }\n            }));\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/components/track.import.jsx.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/components/track', ['../lib/react-clonewithprops', '../lib/object-assign', '../lib/classnames'], function (_export) {\n    var cloneWithProps, assign, classnames, getSlideClasses, getSlideStyle, renderSlides, Track;\n    return {\n        setters: [function (_libReactClonewithprops) {\n            cloneWithProps = _libReactClonewithprops['default'];\n        }, function (_libObjectAssign) {\n            assign = _libObjectAssign['default'];\n        }, function (_libClassnames) {\n            classnames = _libClassnames['default'];\n        }],\n        execute: function () {\n            getSlideClasses = function (spec) {\n                var slickActive, slickCenter, slickCloned;\n                var centerOffset, index;\n\n                if (spec.rtl) {\n                    index = spec.slideCount - 1 - spec.index;\n                    console.log();\n                } else {\n                    index = spec.index;\n                }\n\n                slickCloned = index < 0 || index >= spec.slideCount;\n                if (spec.centerMode) {\n                    centerOffset = Math.floor(spec.slidesToShow / 2);\n                    slickCenter = spec.currentSlide === index;\n                    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {\n                        slickActive = true;\n                    }\n                } else {\n                    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;\n                }\n                return classnames({\n                    'slick-slide': true,\n                    'slick-active': slickActive,\n                    'slick-center': slickCenter,\n                    'slick-cloned': slickCloned\n                });\n            };\n\n            getSlideStyle = function (spec) {\n                var style = {};\n\n                if (spec.variableWidth === undefined || spec.variableWidth === false) {\n                    style.width = spec.slideWidth;\n                }\n\n                if (spec.fade) {\n                    style.position = 'relative';\n                    style.left = -spec.index * spec.slideWidth;\n                    style.opacity = spec.currentSlide === spec.index ? 1 : 0;\n                    style.transition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;\n                    style.WebkitTransition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;\n                }\n\n                return style;\n            };\n\n            renderSlides = function (spec) {\n                var key;\n                var slides = [];\n                var preCloneSlides = [];\n                var postCloneSlides = [];\n                var count = React.Children.count(spec.children);\n                var child;\n\n                React.Children.forEach(spec.children, function (elem, index) {\n                    if (!spec.lazyLoad | (spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0)) {\n                        child = elem;\n                    } else {\n                        child = React.createElement('div', null);\n                    }\n\n                    var childStyle = getSlideStyle(assign({}, spec, { index: index }));\n                    slides.push(cloneWithProps(child, {\n                        key: index,\n                        'data-index': index,\n                        className: getSlideClasses(assign({ index: index }, spec)),\n                        style: childStyle\n                    }));\n\n                    // variableWidth doesn't wrap properly.\n                    if (spec.infinite && spec.fade === false) {\n                        var infiniteCount = spec.variableWidth ? spec.slidesToShow + 1 : spec.slidesToShow;\n\n                        if (index >= count - infiniteCount) {\n                            key = -(count - index);\n                            preCloneSlides.push(cloneWithProps(child, {\n                                key: key,\n                                'data-index': key,\n                                className: getSlideClasses(assign({ index: key }, spec)),\n                                style: childStyle\n                            }));\n                        }\n\n                        if (index < infiniteCount) {\n                            key = count + index;\n                            postCloneSlides.push(cloneWithProps(child, {\n                                key: key,\n                                'data-index': key,\n                                className: getSlideClasses(assign({ index: key }, spec)),\n                                style: childStyle\n                            }));\n                        }\n                    }\n                });\n\n                if (spec.rtl) {\n                    return preCloneSlides.concat(slides, postCloneSlides).reverse();\n                } else {\n                    return preCloneSlides.concat(slides, postCloneSlides);\n                }\n            };\n\n            Track = React.createClass({\n                render: function () {\n                    var slides = renderSlides(this.props);\n                    return React.createElement(\n                        'div',\n                        { className: 'slick-track', style: this.props.trackStyle },\n                        slides\n                    );\n                }\n            });\n\n            _export('Track', Track);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/mixins/event-handlers.import.jsx.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/mixins/event-handlers', ['./trackHelper', '../lib/object-assign'], function (_export) {\n    var getTrackCSS, getTrackLeft, getTrackAnimateCSS, assign, EventHandlers;\n    return {\n        setters: [function (_trackHelper) {\n            getTrackCSS = _trackHelper.getTrackCSS;\n            getTrackLeft = _trackHelper.getTrackLeft;\n            getTrackAnimateCSS = _trackHelper.getTrackAnimateCSS;\n        }, function (_libObjectAssign) {\n            assign = _libObjectAssign['default'];\n        }],\n        execute: function () {\n            EventHandlers = {\n                // Event handler for previous and next\n                changeSlide: function (options) {\n                    var indexOffset, slideOffset, unevenOffset, targetSlide;\n                    unevenOffset = this.state.slideCount % this.props.slidesToScroll !== 0;\n                    indexOffset = unevenOffset ? 0 : (this.state.slideCount - this.state.currentSlide) % this.props.slidesToScroll;\n\n                    if (options.message === 'previous') {\n                        slideOffset = indexOffset === 0 ? this.props.slidesToScroll : this.props.slidesToShow - indexOffset;\n                        targetSlide = this.state.currentSlide - slideOffset;\n                    } else if (options.message === 'next') {\n                        slideOffset = indexOffset === 0 ? this.props.slidesToScroll : indexOffset;\n                        targetSlide = this.state.currentSlide + slideOffset;\n                    } else if (options.message === 'dots') {\n                        // Click on dots\n                        targetSlide = options.index * options.slidesToScroll;\n                        if (targetSlide === options.currentSlide) {\n                            return;\n                        }\n                    }\n\n                    this.slideHandler(targetSlide);\n                },\n                // Accessiblity handler for previous and next\n                keyHandler: function (e) {},\n                // Focus on selecting a slide (click handler on track)\n                selectHandler: function (e) {},\n                swipeStart: function (e) {\n                    var touches, posX, posY;\n\n                    if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {\n                        return;\n                    } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {\n                        return;\n                    }\n                    posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;\n                    posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;\n                    this.setState({\n                        dragging: true,\n                        touchObject: {\n                            startX: posX,\n                            startY: posY,\n                            curX: posX,\n                            curY: posY\n                        }\n                    });\n                },\n                swipeMove: function (e) {\n                    if (!this.state.dragging) {\n                        return;\n                    }\n                    if (this.state.animating) {\n                        return;\n                    }\n                    var swipeLeft;\n                    var curLeft, positionOffset;\n                    var touchObject = this.state.touchObject;\n\n                    curLeft = getTrackLeft(assign({\n                        slideIndex: this.state.currentSlide,\n                        trackRef: this.refs.track\n                    }, this.props, this.state));\n                    touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n                    touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n                    touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n\n                    positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n\n                    var currentSlide = this.state.currentSlide;\n                    var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);\n                    var swipeDirection = this.swipeDirection(this.state.touchObject);\n                    var touchSwipeLength = touchObject.swipeLength;\n\n                    if (this.props.infinite === false) {\n                        if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {\n                            touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;\n\n                            if (this.state.edgeDragged === false && this.props.edgeEvent) {\n                                this.props.edgeEvent(swipeDirection);\n                                this.setState({ edgeDragged: true });\n                            }\n                        }\n                    }\n\n                    if (this.state.swiped === false && this.props.swipeEvent) {\n                        this.props.swipeEvent(swipeDirection);\n                        this.setState({ swiped: true });\n                    }\n\n                    swipeLeft = curLeft + touchSwipeLength * positionOffset;\n                    this.setState({\n                        touchObject: touchObject,\n                        swipeLeft: swipeLeft,\n                        trackStyle: getTrackCSS(assign({ left: swipeLeft }, this.props, this.state))\n                    });\n\n                    if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n                        return;\n                    }\n                    if (touchObject.swipeLength > 4) {\n                        e.preventDefault();\n                    }\n                },\n                swipeEnd: function (e) {\n                    if (!this.state.dragging) {\n                        return;\n                    }\n                    var touchObject = this.state.touchObject;\n                    var minSwipe = this.state.listWidth / this.props.touchThreshold;\n                    var swipeDirection = this.swipeDirection(touchObject);\n\n                    // reset the state of touch related state variables.\n                    this.setState({\n                        dragging: false,\n                        edgeDragged: false,\n                        swiped: false,\n                        swipeLeft: null,\n                        touchObject: {}\n                    });\n                    // Fix for #13\n                    if (!touchObject.swipeLength) {\n                        return;\n                    }\n                    if (touchObject.swipeLength > minSwipe) {\n                        e.preventDefault();\n                        if (swipeDirection === 'left') {\n                            this.slideHandler(this.state.currentSlide + this.props.slidesToScroll);\n                        } else if (swipeDirection === 'right') {\n                            this.slideHandler(this.state.currentSlide - this.props.slidesToScroll);\n                        } else {\n                            this.slideHandler(this.state.currentSlide);\n                        }\n                    } else {\n                        // Adjust the track back to it's original position.\n                        var currentLeft = getTrackLeft(assign({\n                            slideIndex: this.state.currentSlide,\n                            trackRef: this.refs.track\n                        }, this.props, this.state));\n\n                        this.setState({\n                            trackStyle: getTrackAnimateCSS(assign({ left: currentLeft }, this.props, this.state))\n                        });\n                    }\n                }\n            };\n\n            _export('default', EventHandlers);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/mixins/helpers.import.jsx.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/mixins/helpers', ['../lib/react-transition-events', './trackHelper', '../lib/object-assign'], function (_export) {\n    var ReactTransitionEvents, getTrackCSS, getTrackLeft, getTrackAnimateCSS, assign, helpers;\n    return {\n        setters: [function (_libReactTransitionEvents) {\n            ReactTransitionEvents = _libReactTransitionEvents['default'];\n        }, function (_trackHelper) {\n            getTrackCSS = _trackHelper.getTrackCSS;\n            getTrackLeft = _trackHelper.getTrackLeft;\n            getTrackAnimateCSS = _trackHelper.getTrackAnimateCSS;\n        }, function (_libObjectAssign) {\n            assign = _libObjectAssign['default'];\n        }],\n        execute: function () {\n            helpers = {\n                initialize: function (props) {\n                    var slideCount = React.Children.count(props.children);\n                    var listWidth = this.refs.list.getDOMNode().getBoundingClientRect().width;\n                    var trackWidth = this.refs.track.getDOMNode().getBoundingClientRect().width;\n                    var slideWidth = this.getDOMNode().getBoundingClientRect().width / props.slidesToShow;\n\n                    var currentSlide = props.rtl ? slideCount - 1 - props.initialSlide : props.initialSlide;\n\n                    this.setState({\n                        slideCount: slideCount,\n                        slideWidth: slideWidth,\n                        listWidth: listWidth,\n                        trackWidth: trackWidth,\n                        currentSlide: currentSlide\n\n                    }, function () {\n\n                        var targetLeft = getTrackLeft(assign({\n                            slideIndex: this.state.currentSlide,\n                            trackRef: this.refs.track\n                        }, props, this.state));\n                        // getCSS function needs previously set state\n                        var trackStyle = getTrackCSS(assign({ left: targetLeft }, props, this.state));\n\n                        this.setState({ trackStyle: trackStyle });\n\n                        this.autoPlay(); // once we're set up, trigger the initial autoplay.\n                    });\n                },\n                update: function (props) {\n                    // This method has mostly same code as initialize method.\n                    // Refactor it\n                    var slideCount = React.Children.count(props.children);\n                    var listWidth = this.refs.list.getDOMNode().getBoundingClientRect().width;\n                    var trackWidth = this.refs.track.getDOMNode().getBoundingClientRect().width;\n                    var slideWidth = this.getDOMNode().getBoundingClientRect().width / props.slidesToShow;\n\n                    this.setState({\n                        slideCount: slideCount,\n                        slideWidth: slideWidth,\n                        listWidth: listWidth,\n                        trackWidth: trackWidth\n                    }, function () {\n\n                        var targetLeft = getTrackLeft(assign({\n                            slideIndex: this.state.currentSlide,\n                            trackRef: this.refs.track\n                        }, props, this.state));\n                        // getCSS function needs previously set state\n                        var trackStyle = getTrackCSS(assign({ left: targetLeft }, props, this.state));\n\n                        this.setState({ trackStyle: trackStyle });\n                    });\n                },\n                adaptHeight: function () {\n                    if (this.props.adaptiveHeight) {\n                        var selector = '[data-index=\"' + this.state.currentSlide + '\"]';\n                        if (this.refs.list) {\n                            var slickList = this.refs.list.getDOMNode();\n                            slickList.style.height = slickList.querySelector(selector).offsetHeight + 'px';\n                        }\n                    }\n                },\n                slideHandler: function (index) {\n                    var _this = this;\n\n                    // Functionality of animateSlide and postSlide is merged into this function\n                    // console.log('slideHandler', index);\n                    var targetSlide, currentSlide;\n                    var targetLeft, currentLeft;\n                    var callback;\n\n                    if (this.state.animating === true || this.state.currentSlide === index) {\n                        return;\n                    }\n\n                    if (this.props.fade) {\n                        currentSlide = this.state.currentSlide;\n\n                        if (this.props.beforeChange) {\n                            this.props.beforeChange(currentSlide);\n                        }\n\n                        //  Shifting targetSlide back into the range\n                        if (index < 0) {\n                            targetSlide = index + this.state.slideCount;\n                        } else if (index >= this.state.slideCount) {\n                            targetSlide = index - this.state.slideCount;\n                        } else {\n                            targetSlide = index;\n                        }\n\n                        if (this.props.lazyLoad && this.state.lazyLoadedList.indexOf(targetSlide) < 0) {\n                            this.setState({\n                                lazyLoadedList: this.state.lazyLoadedList.concat(targetSlide)\n                            });\n                        }\n\n                        callback = function () {\n                            _this.setState({\n                                animating: false\n                            });\n                            if (_this.props.afterChange) {\n                                _this.props.afterChange(currentSlide);\n                            }\n                            ReactTransitionEvents.removeEndEventListener(_this.refs.track.getDOMNode().children[currentSlide], callback);\n                        };\n\n                        this.setState({\n                            animating: true,\n                            currentSlide: targetSlide\n                        }, function () {\n                            ReactTransitionEvents.addEndEventListener(this.refs.track.getDOMNode().children[currentSlide], callback);\n                        });\n\n                        this.autoPlay();\n                        return;\n                    }\n\n                    targetSlide = index;\n                    if (targetSlide < 0) {\n                        if (this.props.infinite === false) {\n                            currentSlide = 0;\n                        } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {\n                            currentSlide = this.state.slideCount - this.state.slideCount % this.props.slidesToScroll;\n                        } else {\n                            currentSlide = this.state.slideCount + targetSlide;\n                        }\n                    } else if (targetSlide >= this.state.slideCount) {\n                        if (this.props.infinite === false) {\n                            currentSlide = this.state.slideCount - this.props.slidesToShow;\n                        } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {\n                            currentSlide = 0;\n                        } else {\n                            currentSlide = targetSlide - this.state.slideCount;\n                        }\n                    } else {\n                        currentSlide = targetSlide;\n                    }\n\n                    targetLeft = getTrackLeft(assign({\n                        slideIndex: targetSlide,\n                        trackRef: this.refs.track\n                    }, this.props, this.state));\n\n                    currentLeft = getTrackLeft(assign({\n                        slideIndex: currentSlide,\n                        trackRef: this.refs.track\n                    }, this.props, this.state));\n\n                    if (this.props.infinite === false) {\n                        targetLeft = currentLeft;\n                    }\n\n                    if (this.props.beforeChange) {\n                        this.props.beforeChange(currentSlide);\n                    }\n\n                    if (this.props.lazyLoad) {\n                        var loaded = true;\n                        var slidesToLoad = [];\n                        for (var i = targetSlide; i < targetSlide + this.props.slidesToShow; i++) {\n                            loaded = loaded && this.state.lazyLoadedList.indexOf(i) >= 0;\n                            if (!loaded) {\n                                slidesToLoad.push(i);\n                            }\n                        }\n                        if (!loaded) {\n                            this.setState({\n                                lazyLoadedList: this.state.lazyLoadedList.concat(slidesToLoad)\n                            });\n                        }\n                    }\n\n                    // Slide Transition happens here.\n                    // animated transition happens to target Slide and\n                    // non - animated transition happens to current Slide\n                    // If CSS transitions are false, directly go the current slide.\n\n                    if (this.props.useCSS === false) {\n\n                        this.setState({\n                            currentSlide: currentSlide,\n                            trackStyle: getTrackCSS(assign({ left: currentLeft }, this.props, this.state))\n                        }, function () {\n                            if (this.props.afterChange) {\n                                this.props.afterChange(currentSlide);\n                            }\n                        });\n                    } else {\n\n                        var nextStateChanges = {\n                            animating: false,\n                            currentSlide: currentSlide,\n                            trackStyle: getTrackCSS(assign({ left: currentLeft }, this.props, this.state)),\n                            swipeLeft: null\n                        };\n\n                        callback = function () {\n                            _this.setState(nextStateChanges);\n                            if (_this.props.afterChange) {\n                                _this.props.afterChange(currentSlide);\n                            }\n                            ReactTransitionEvents.removeEndEventListener(_this.refs.track.getDOMNode(), callback);\n                        };\n\n                        this.setState({\n                            animating: true,\n                            currentSlide: targetSlide,\n                            trackStyle: getTrackAnimateCSS(assign({ left: targetLeft }, this.props, this.state))\n                        }, function () {\n                            ReactTransitionEvents.addEndEventListener(this.refs.track.getDOMNode(), callback);\n                        });\n                    }\n\n                    this.autoPlay();\n                },\n                swipeDirection: function (touchObject) {\n                    var xDist, yDist, r, swipeAngle;\n\n                    xDist = touchObject.startX - touchObject.curX;\n                    yDist = touchObject.startY - touchObject.curY;\n                    r = Math.atan2(yDist, xDist);\n\n                    swipeAngle = Math.round(r * 180 / Math.PI);\n                    if (swipeAngle < 0) {\n                        swipeAngle = 360 - Math.abs(swipeAngle);\n                    }\n                    if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {\n                        return this.props.rtl === false ? 'left' : 'right';\n                    }\n                    if (swipeAngle >= 135 && swipeAngle <= 225) {\n                        return this.props.rtl === false ? 'right' : 'left';\n                    }\n\n                    return 'vertical';\n                },\n                autoPlay: function () {\n                    var _this2 = this;\n\n                    var play = function () {\n                        if (_this2.state.mounted) {\n                            _this2.slideHandler(_this2.state.currentSlide + _this2.props.slidesToScroll);\n                        }\n                    };\n                    if (this.props.autoplay) {\n                        window.clearTimeout(this.state.autoPlayTimer);\n                        this.setState({\n                            autoPlayTimer: window.setTimeout(play, this.props.autoplaySpeed)\n                        });\n                    }\n                }\n            };\n\n            _export('default', helpers);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/mixins/react-responsive.import.jsx.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/mixins/react-responsive', ['../lib/enquire', '../lib/json2mq'], function (_export) {\n    var enquire, json2mq, ResponsiveMixin;\n    return {\n        setters: [function (_libEnquire) {\n            enquire = _libEnquire['default'];\n        }, function (_libJson2mq) {\n            json2mq = _libJson2mq['default'];\n        }],\n        execute: function () {\n            ResponsiveMixin = {\n                media: function (query, handler) {\n                    query = json2mq(query);\n                    if (typeof handler === 'function') {\n                        handler = {\n                            match: handler\n                        };\n                    }\n                    enquire.register(query, handler);\n\n                    // Queue the handlers to unregister them at unmount\n                    if (!this._responsiveMediaHandlers) {\n                        this._responsiveMediaHandlers = [];\n                    }\n                    this._responsiveMediaHandlers.push({ query: query, handler: handler });\n                },\n                componentWillUnmount: function () {\n                    if (this._responsiveMediaHandlers) {\n                        this._responsiveMediaHandlers.forEach(function (obj) {\n                            enquire.unregister(obj.query, obj.handler);\n                        });\n                    }\n                }\n            };\n\n            _export('default', ResponsiveMixin);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/mixins/trackHelper.import.jsx.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register('{universe:carousel}/mixins/trackHelper', [], function (_export) {\n    var checkSpecKeys, getTrackCSS, getTrackAnimateCSS, getTrackLeft;\n    return {\n        setters: [],\n        execute: function () {\n            checkSpecKeys = function (spec, keysArray) {\n                return keysArray.reduce(function (value, key) {\n                    return value && spec.hasOwnProperty(key);\n                }, true) ? null : console.error('Keys Missing', spec);\n            };\n\n            getTrackCSS = function (spec) {\n                checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);\n\n                var trackWidth;\n\n                if (spec.variableWidth) {\n                    trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;\n                } else if (spec.centerMode) {\n                    trackWidth = (spec.slideCount + 2 * (spec.slidesToShow + 1)) * spec.slideWidth;\n                } else {\n                    trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;\n                }\n\n                var style = {\n                    opacity: 1,\n                    width: trackWidth,\n                    WebkitTransform: 'translate3d(' + spec.left + 'px, 0px, 0px)',\n                    transform: 'translate3d(' + spec.left + 'px, 0px, 0px)',\n                    transition: '',\n                    WebkitTransition: '',\n                    msTransform: 'translateX(' + spec.left + 'px)'\n                };\n\n                return style;\n            };\n\n            _export('getTrackCSS', getTrackCSS);\n\n            getTrackAnimateCSS = function (spec) {\n                checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);\n\n                var style = getTrackCSS(spec);\n                // useCSS is true by default so it can be undefined\n                style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;\n                style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;\n                return style;\n            };\n\n            _export('getTrackAnimateCSS', getTrackAnimateCSS);\n\n            getTrackLeft = function (spec) {\n\n                checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth']);\n\n                var slideOffset = 0;\n                var targetLeft;\n                var targetSlide;\n\n                if (spec.fade) {\n                    return 0;\n                }\n\n                if (spec.infinite) {\n                    if (spec.slideCount > spec.slidesToShow) {\n                        slideOffset = spec.slideWidth * spec.slidesToShow * -1;\n                    }\n                    if (spec.slideCount % spec.slidesToScroll !== 0) {\n                        if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {\n                            if (spec.slideIndex > spec.slideCount) {\n                                slideOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideWidth * -1;\n                            } else {\n                                slideOffset = spec.slideCount % spec.slidesToScroll * spec.slideWidth * -1;\n                            }\n                        }\n                    }\n                }\n\n                if (spec.centerMode) {\n                    if (spec.infinite) {\n                        slideOffset += spec.slideWidth * Math.floor(spec.slidesToShow / 2);\n                    } else {\n                        slideOffset = spec.slideWidth * Math.floor(spec.slidesToShow / 2);\n                    }\n                }\n\n                targetLeft = spec.slideIndex * spec.slideWidth * -1 + slideOffset;\n\n                if (spec.variableWidth === true) {\n                    var targetSlideIndex;\n                    if (spec.slideCount <= spec.slidesToShow || spec.infinite === false) {\n                        targetSlide = spec.trackRef.getDOMNode().childNodes[spec.slideIndex];\n                    } else {\n                        targetSlideIndex = spec.slideIndex + spec.slidesToShow;\n                        targetSlide = spec.trackRef.getDOMNode().childNodes[targetSlideIndex];\n                    }\n                    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;\n                    if (spec.centerMode === true) {\n                        if (spec.infinite === false) {\n                            targetSlide = spec.trackRef.getDOMNode().children[spec.slideIndex];\n                        } else {\n                            targetSlide = spec.trackRef.getDOMNode().children[spec.slideIndex + spec.slidesToShow + 1];\n                        }\n\n                        targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;\n                        targetLeft += (spec.listWidth - targetSlide.offsetWidth) / 2;\n                    }\n                }\n\n                return targetLeft;\n            };\n\n            _export('getTrackLeft', getTrackLeft);\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/universe:carousel/example/demos.import.jsx.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSystem.register(\"{universe:carousel}/example/demos\", [\"../index\"], function (_export) {\n    var Slider, SingleItem, MultipleItems, Responsive, CenterMode, AutoPlay, VariableWidth, AdaptiveHeight, LazyLoad, Fade;\n    return {\n        setters: [function (_index) {\n            Slider = _index[\"default\"];\n        }],\n        execute: function () {\n            SingleItem = React.createClass({\n                getInitialState: function () {\n                    return { count: 10 };\n                },\n                click: function () {\n                    this.setState({ count: this.state.count + 1 });\n                },\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \" Single Item\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                { onClick: this.click },\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    this.state.count\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            MultipleItems = React.createClass({\n\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 3,\n                        slidesToScroll: 3\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \" Multiple items \"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"1\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"7\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"8\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"9\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            Responsive = React.createClass({\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        infinite: false,\n                        speed: 500,\n                        slidesToShow: 4,\n                        slidesToScroll: 4,\n                        responsive: [{\n                            breakpoint: 1024,\n                            settings: {\n                                slidesToShow: 3,\n                                slidesToScroll: 3,\n                                infinite: true,\n                                dots: true\n                            }\n                        }, {\n                            breakpoint: 600,\n                            settings: {\n                                slidesToShow: 2,\n                                slidesToScroll: 2\n                            }\n                        }, {\n                            breakpoint: 480,\n                            settings: {\n                                slidesToShow: 1,\n                                slidesToScroll: 1\n                            }\n                        }]\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \" Responsive \"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"1\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"7\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"8\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            CenterMode = React.createClass({\n                render: function () {\n                    var settings = {\n                        className: 'center',\n                        centerMode: true,\n                        infinite: true,\n                        centerPadding: '60px',\n                        slidesToShow: 7,\n                        speed: 500,\n                        beforeChange: function (index) {\n                            console.log('Slider will change from:' + index);\n                        },\n                        afterChange: function (currentSlide) {\n                            console.log('Slider Changed to :' + (currentSlide + 1));\n                        }\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \"Center Mode\"\n                        ),\n                        React.createElement(\n                            \"p\",\n                            null,\n                            \"Fix flicker issue at warping\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"1\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"7\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"8\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"9\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            AutoPlay = React.createClass({\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        infinite: true,\n                        slidesToShow: 3,\n                        slidesToScroll: 1,\n                        autoplay: true,\n                        autoplaySpeed: 2000\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \"Auto Play\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"1\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            VariableWidth = React.createClass({\n                render: function () {\n                    var settings = {\n                        className: 'slider variable-width',\n                        dots: true,\n                        infinite: true,\n                        centerMode: true,\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                        variableWidth: true\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \"Variable width\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 100 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"100\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 200 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"200\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 75 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"75\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 300 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"300\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 225 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"225\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { style: { width: 175 } },\n                                React.createElement(\n                                    \"p\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"175\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            AdaptiveHeight = React.createClass({\n                render: function () {\n                    var settings = {\n                        className: '',\n                        dots: true,\n                        infinite: true,\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                        adaptiveHeight: true\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \"Adaptive height\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"1\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"2\"\n                                ),\n                                React.createElement(\n                                    \"p\",\n                                    null,\n                                    \"Hello\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"3\"\n                                ),\n                                React.createElement(\n                                    \"p\",\n                                    null,\n                                    \"See ....\"\n                                ),\n                                React.createElement(\n                                    \"p\",\n                                    null,\n                                    \"Height is adaptive\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"4\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"5\"\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"h3\",\n                                    { className: \"carousel-demo-box\" },\n                                    \"6\"\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n            LazyLoad = React.createClass({\n\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        lazyLoad: true,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \" Lazy Load\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/f0f00f/0000000\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/ff0000/000ff00\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/00f000/f00000f\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150\" })\n                            )\n                        )\n                    );\n                }\n            });\n            Fade = React.createClass({\n\n                render: function () {\n                    var settings = {\n                        dots: true,\n                        fade: true,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    };\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        React.createElement(\n                            \"h2\",\n                            null,\n                            \"Fade\"\n                        ),\n                        React.createElement(\n                            Slider,\n                            settings,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/00f0ff/00f00f\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/fff0ff/0f0f00\" })\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\"img\", { src: \"http://placehold.it/350x150/f0f00f/000000\" })\n                            )\n                        )\n                    );\n                }\n            });\n\n            _export(\"default\", React.createClass({\n                render: function () {\n                    //need to add variable width and center mode demo\n                    return React.createElement(\n                        \"div\",\n                        { className: 'content' },\n                        React.createElement(\n                            \"style\",\n                            null,\n                            \".carousel-demo-box {\" + \"background: #0055ff;\" + \"color: #fff;\" + \"font-size: 36px;\" + \"line-height: 80px;\" + \"margin: 10px;\" + \"padding: 2%;\" + \"position: relative;\" + \"text-align: center;\" + \"}\"\n                        ),\n                        React.createElement(SingleItem, null),\n                        React.createElement(MultipleItems, null),\n                        React.createElement(Responsive, null),\n                        React.createElement(CenterMode, null),\n                        React.createElement(AutoPlay, null),\n                        React.createElement(VariableWidth, null),\n                        React.createElement(AdaptiveHeight, null),\n                        React.createElement(LazyLoad, null),\n                        React.createElement(Fade, null)\n                    );\n                }\n            }));\n        }\n    };\n});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}