{"version":3,"sources":["meteor://ðŸ’»app/server/publish.js"],"names":[],"mappings":";;;;;;;;;;;AAGE,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,UAAS,MAAM,EAAC;AACnC,KAAI,MAAM,EAAE;AACb,SAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;EACnC;;AAED,QAAO,IAAI,CAAC,IAAI,EAAE,CAAC;CACnB,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAS,MAAM,EAAC;;AAElD,KAAI,MAAM,EAAE;AACX,MAAI,aAAa,GAAG,kBAAkB,CAAC,IAAI,CAAC;AAC1C,UAAO,EAAE;AACR,OAAG,EAAE,CAAC,MAAM,CAAC;IACb;GACH,CAAC,CAAC;AACN,SAAO,aAAa,CAAC;EACjB;;AAEA,QAAO,kBAAkB,CAAC,IAAI,EAAE,CAAC;CACpC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAS,MAAM,EAAC;;AAE/C,KAAI,MAAM,EAAE;AACX,MAAI,aAAa,GAAG,kBAAkB,CAAC,IAAI,CAAC;AAC1C,UAAO,EAAE;AACR,OAAG,EAAE,CAAC,MAAM,CAAC;IACb;GACH,CAAC,CAAC;AACH,MAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,MAAI,CAAC,GAAG,CAAC,CAAC;AACb,eAAa,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC;AACjC,mBAAgB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,IAAC,EAAE,CAAC;GACL,CAAC,CAAC;AACA,SAAO,eAAe,CAAC,IAAI,CAAC;AACzB,wBAAqB,EAAE;AACtB,OAAG,EAAE,gBAAgB;IACrB;GACH,CAAC,CAAC;EACJ;;AAED,QAAO,eAAe,CAAC,IAAI,EAAE,CAAC;CAC9B,CAAC,CAAC,sE","file":"/server/publish.js","sourcesContent":["  /*\n  \tPublish only informations of the current user if userId is an input\n  */\n  Meteor.publish('User', function(userId){\n      if (userId) {\n\t    return User.find({ _id: userId });\n\t  }\n\t  //every users\n\t  return User.find();\n  });\n\n  Meteor.publish('Correction_profile', function(userId){\n  \t  //corrections profiles of the user only\n  \t  if (userId) {\n  \t  \tvar corr_profiles = Correction_profile.find({\n\t      \tuser_id: {\n\t      \t\t$in: [userId] \n\t      \t}\n\t    });\n\t\treturn corr_profiles;\n  \t  }\n  \t  //every correction profiles in DB\n      return Correction_profile.find(); \n  });\n\n  Meteor.publish('Adaptation_rule', function(userId){\n  \t  //adaptation rules of the user's correction profiles only\n  \t  if (userId) {\n  \t  \tvar corr_profiles = Correction_profile.find({\n\t      \tuser_id: {\n\t      \t\t$in: [userId] \n\t      \t}\n\t    });\n\t    var corr_profiles_id = [];\n\t    var i = 0;\n\t\tcorr_profiles.forEach(function(doc){\n\t\t  corr_profiles_id[i] = doc._id;\n\t\t  i++;\n\t\t});\n\t    return Adaptation_rule.find({\n\t      \tcorrection_profile_id: {\n\t      \t\t$in: corr_profiles_id\n\t      \t}\n\t    }); \n\t  }\n  \t  //every adaptation rules in DB\n\t  return Adaptation_rule.find();\n  });"]}